pipeline GTFSPipeline {

    GTFSDataExtractor -> ZipArchiveInterpreter;

    ZipArchiveInterpreter
        -> StopsFilePicker 
        -> StopsTextFileInterpreter
        -> StopsCSVInterpreter 
        -> StopsTableInterpreter 
        -> StopsLoader;


    block GTFSDataExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block ZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block StopsFilePicker oftype FilePicker {
        path: "/stops.txt";
    }


    block StopsTextFileInterpreter oftype TextFileInterpreter { }
    block StopsCSVInterpreter oftype CSVInterpreter {
         enclosingEscape: '"';
         enclosing: '"';
        }

 

    block StopsTableInterpreter oftype TableInterpreter {
        header: true;
        columns:[
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype decimal,
            "stop_lon" oftype decimal,
            "zone_id" oftype ZoneID,
        ];
    }

   valuetype ZoneID oftype integer {
        constraints: [ Zone2001 ];
    }

    constraint Zone2001 on integer:
        value == 2001;
   


    valuetype ValidGeoCord oftype decimal {
        constraints: [ ValidCord ];
    }

    constraint ValidCord on decimal:
        value >= -90 and value <= 90;
   
   

    block StopsLoader oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }

}